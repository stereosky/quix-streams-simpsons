version: '3.7'
name: quix-streams-simpsons
services:

  redpanda:
    container_name: redpanda
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.19
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --set auto_create_topics_enabled=true
    ports:
      - 18081:8081
      - 18082:8082
      - 19092:9092
      - 19644:9644
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.3.8
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - 8080:8080
    depends_on:
      - redpanda

  simpsons-data-source:
    container_name: simpsons-data-source
    restart: always
    build:
      context: "./simpsons_data_source"
    environment:
      - KAFKA_BROKER_ADDRESS=redpanda:9092
      - use_local_kafka=true
      - output=simpsons-dialogue
    depends_on:
      - redpanda

  dialogue-counter:
    container_name: dialogue-counter
    restart: always
    build:
      context: "./dialogue_counter"
    environment:
      - KAFKA_BROKER_ADDRESS=redpanda:9092
      - use_local_kafka=true
      - input=simpsons-dialogue
      - output=dialogue-counter
    depends_on:
      - redpanda

  profanity-censor:
    container_name: profanity-censor
    restart: always
    build:
      context: "./profanity_censor"
    environment:
      - KAFKA_BROKER_ADDRESS=redpanda:9092
      - use_local_kafka=true
      - input=simpsons-dialogue
      - output=dialogue-censored
    depends_on:
      - redpanda

  # console-logger:
  #   container_name: console-logger
  #   restart: always
  #   build:
  #     context: "./console logger"
  #   environment:
  #     - KAFKA_BROKER_ADDRESS=redpanda:9092
  #     - input=counted-names
  #     - use_local_kafka=true
  #   depends_on:
  #     - redpanda